<?xml version="1.0" encoding="utf-8"?>

<!--

	 Customize Skin

-->

<!--

	 ADOBE SYSTEMS INCORPORATED
	 Copyright 2008 Adobe Systems Incorporated
	 All Rights Reserved.

	 NOTICE: Adobe permits you to use, modify, and distribute this file
	 in accordance with the terms of the license agreement accompanying it.

-->

<!--- The Spark skin class for the MX Button component.

	 @see mx.controls.Button

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<local:SparkSkinForHalo xmlns:fx="http://ns.adobe.com/mxml/2009"
						xmlns:s="library://ns.adobe.com/flex/spark"
						xmlns:local="mx.skins.spark.*"
						minWidth="21"
						minHeight="18"
						alpha.disabledStates="0.5">

	<fx:Script>
		/* Define the border items.*/
		static private const borderItem:Array = [];
		/**
		 * @private
		 */
		override protected function get borderItems():Array {return borderItem;}
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
		
		/**
		 *  @private
		 */
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
		{
			var cr:Number = getStyle("cornerRadius");
			
			if (cornerRadius != cr)
			{
				cornerRadius = cr;
				shadow.radiusX = cornerRadius;
				fill.radiusX = cornerRadius;
				

				border.radiusX = cornerRadius;
			}
			
			if (highlightStroke) highlightStroke.radiusX = cornerRadius;
			if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
			if (hldownstroke2) hldownstroke2.radiusX = cornerRadius;
			
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
		
		private var cornerRadius:Number = 2;
	</fx:Script>
	
	<!-- states -->
	<local:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="selectedUp" stateGroups="selectedStates, selectedUpStates" />
		<s:State name="selectedOver" stateGroups="overStates, selectedStates" />
		<s:State name="selectedDown" stateGroups="downStates, selectedStates" />
		<s:State name="selectedDisabled" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</local:states>
	
	<!-- layer 1: shadow -->
	<!--- @private -->
	<s:Rect id="shadow" left="-1" right="-1" top="-1" bottom="-1" radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" 
								 color.downStates="0x53b6f9"
								 alpha="0"
								 alpha.downStates="1" />
				<s:GradientEntry color="0xFFFFFF" 
								 color.downStates="0x53b6f9" 
								 alpha="1"
								 alpha.downStates="1" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<!-- layer 2: fill -->
	<!--- @private -->
	<s:Rect id="fill" left="1" right="1" top="1" bottom="1" radiusX="2">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xe6e6e6" 
								 color.selectedUpStates="0xBBBDBD"
								 color.overStates="0xdcdcdc" 
								 color.downStates="0xb5b5b5" 
								 />
				<s:GradientEntry color="0xc7c7c7" 
								 color.selectedUpStates="0x9FA0A1"
								 color.over="0xc0c0c0" 
								 color.selectedOver="0x8E8F90"
								 color.downStates="0x949494" 
								  />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<!-- layer 5: highlight stroke (all states except down) -->
	<!--- @private -->
	<s:Rect id="highlightStroke" left="1" right="1" top="1" bottom="1" radiusX="2" excludeFrom="downStates">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0xf1f1f1" alpha.overStates="1" alpha.selectedUpStates="1" />
				<s:GradientEntry color="0xd4d4d4" alpha.overStates="1" alpha.selectedUpStates="1" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	
	<!-- layer 6: highlight stroke (down state only) -->
	<!--- @private -->
	<s:Rect id="hldownstroke1" left="1" right="1" top="1" bottom="1" radiusX="2"
			includeIn="downStates, selectedUpStates, selectedOver">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.25" ratio="0.0" />
				<s:GradientEntry color="0x000000" alpha="0.25" ratio="0.001" />
				<s:GradientEntry color="0x000000" alpha="0.07" ratio="0.0011" />
				<s:GradientEntry color="0x000000" alpha="0.07" ratio="0.965" />
				<s:GradientEntry color="0x000000" alpha="0.00" ratio="0.9651" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	<!--- @private -->
	<s:Rect id="hldownstroke2" left="2" right="2" top="2" bottom="2" radiusX="2"
			includeIn="downStates, selectedUpStates, selectedOver">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" alpha="0.09" ratio="0.0" />
				<s:GradientEntry color="0x000000" alpha="0.00" ratio="0.0001" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	
	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--- @private -->
	<s:Rect id="border" left="0" right="0" top="0" bottom="0" width="69" height="20" radiusX="2">
		<s:stroke>
			<s:SolidColorStroke color="0x666666" />
		</s:stroke>
	</s:Rect>
	
	<s:Label id="labelDisplay" color="0x444444"  textAlign="center" verticalAlign="middle" maxDisplayedLines="1" horizontalCenter="0" verticalCenter="1" >
		<s:filters>
			<s:DropShadowFilter blurX="0" blurY="0" angle="90" distance="1" color="0xFFFFFF" alpha="0.5" />
		</s:filters>
	</s:Label>

</local:SparkSkinForHalo>